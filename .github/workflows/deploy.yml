name: Deploy to Production
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    environment: production
    env:
      PORT: ${{ vars.PORT }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
      STRIPE_SECRET: ${{ secrets.STRIPE_SECRET }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      UPSTASH_TOKEN: ${{ secrets.UPSTASH_TOKEN }}
      UPSTASH_CURRENT_SIGNING_KEY: ${{ secrets.UPSTASH_CURRENT_SIGNING_KEY }}
      UPSTASH_NEXT_SIGNING_KEY: ${{ secrets.UPSTASH_NEXT_SIGNING_KEY }}
      REDIS_URI: ${{ secrets.REDIS_URI }}
      EXCHANGE_API_KEY: ${{ secrets.EXCHANGE_API_KEY }}
      FRONTEND_URL: ${{ vars.FRONTEND_URL }}
      BACKEND_URL: ${{ vars.BACKEND_URL }}
      EMAIL_USER: ${{ secrets.EMAIL_USER }}
      EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
      NODE_ENV: ${{ vars.NODE_ENV }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}